name: Create Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  PROJECT_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract service names from docker-compose
      id: extract-services
      run: |
        services=$(docker compose config --services | tr '\n' ' ')
        echo "Services found: $services"
        echo "services=$services" >> $GITHUB_OUTPUT

    - name: Build and Push Docker Compose Services
      run: |
        services="${{ steps.extract-services.outputs.services }}"
        for service in $services; do
          if [ -f "./${service}/Dockerfile" ]; then
            docker compose build $service
          fi
          docker tag ${service}:latest ${{ env.REGISTRY }}/${{ env.PROJECT_NAME }}-$service:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_NAME }}-$service:${{ github.sha }}
          
          # Also tag as latest
          docker tag ${service}:latest ${{ env.REGISTRY }}/${{ env.PROJECT_NAME }}-$service:latest
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_NAME }}-$service:latest
        done

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.sha }}
        release_name: Release ${{ github.sha }}
        body: |
          Docker Compose Services pushed to GHCR:
          ${{ steps.extract-services.outputs.services }}