name: Build and Push Docker Images

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and Push Services
      run: |
        # Build app service
        docker build -t digitales-modulhandbuch-app:latest .
        
        # Pull postgres image
        docker pull postgres:latest
        
        # Tag and push app service image
        docker tag digitales-modulhandbuch-app:latest ghcr.io/${{ github.repository }}/app:${{ github.sha }}
        docker push ghcr.io/${{ github.repository }}/app:${{ github.sha }}
        docker tag digitales-modulhandbuch-app:latest ghcr.io/${{ github.repository }}/app:latest
        docker push ghcr.io/${{ github.repository }}/app:latest
        
        # Tag and push postgres image
        docker tag postgres:latest ghcr.io/${{ github.repository }}/db:${{ github.sha }}
        docker push ghcr.io/${{ github.repository }}/db:${{ github.sha }}
        docker tag postgres:latest ghcr.io/${{ github.repository }}/db:latest
        docker push ghcr.io/${{ github.repository }}/db:latest

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm ci

    - name: Run database migrations
      env:
          DATABASE_URL: postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@{{vars.PRODUCTION_URL}}:5432/${{ secrets.POSTGRES_DB }}
      run: npx prisma migrate deploy